[0m[[0m[0mdebug[0m] [0m[0m> Exec(run, Some(ccc04e0e-f44b-42c0-bbee-22a248c4c840), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@7323dce7, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/Training%20Program/Week%204/hiveproject1/src/main/scala/example/HiveScala.scala","languageId":"scala","version":1,"text":"package example\n\nimport example.LoginScreen\n\nobject HiveScala {\n    def main (args: Array[String]) {\n        println(\"Hello, welcome to Stock Market Application\")\n        println(\"Login to continue\")\n        LoginScreen.loginUser\n        \n        while(true){\n            userOptions\n        }\n    }\n\n    def userOptions{\n        var userOptionSeq: Seq[String] = Seq(\"1: Stocks\", \"2: User Options\")\n        println(\"Please, select an option\")\n\n        for(x <- userOptionSeq){\n            println(x)\n        }\n\n        var selection = scala.io.StdIn.readInt\n\n        selection match{\n            case 1 => println(\"Yay Stocks!\")\n            case 2 => LoginScreen.option\n        }\n    }\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨1, shutdown, null})[0m

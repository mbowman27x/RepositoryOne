[0m[[0m[0mdebug[0m] [0m[0m> Exec(run, Some(77ab2a4a-aad4-4d7c-b30e-1006d3a05317), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@7227926b, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/Training%20Program/Week%204/hiveproject1/src/main/scala/example/HiveScala.scala","languageId":"scala","version":1,"text":"package example\n\nimport example.LoginScreen\n\nobject HiveScala {\n    def main (args: Array[String]) {\n        println(\"Hello, welcome to Stock Market Application\")\n        println(\"Login to continue\")\n        LoginScreen.loginUser\n        LoginScreen.option\n    }\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/Training%20Program/Week%204/hiveproject1/src/main/scala/example/LoginScreen.scala","languageId":"scala","version":1,"text":"package example\n\nimport scala.io.Source\n\nobject LoginScreen {\n    var administrator = \"Admin\"\n    var adminPass = \"boss\"\n    var user1 = \"Matthew\"\n    var user1Pass = \"enter\"\n    var failedAttempts = 0\n    var currentUser = \"\"\n\n    def option{\n        var optionSeq: Seq[String] = Seq(\"1: Switch User\", \"2: Update User\", \"3: Display Users\")\n        println(\"Please select an option\")\n        \n        for(x <- optionSeq){\n            println(x)\n        }\n\n        var selection = scala.io.StdIn.readInt\n\n        selection match{\n            case 1 => loginUser\n            case 2 => updateUser\n            case 3 => displayUsers\n            case _ => println(\"Enter a valid number\")\n                        option\n        }\n    }\n\n    def loginUser{\n        println(\"Enter your username\")\n        var username = scala.io.StdIn.readLine\n\n        if(username == administrator){\n            println(\"Enter your password\")\n            var passwd = scala.io.StdIn.readLine\n                if(passwd == adminPass){\n                    println(\"Welcome \" + administrator)\n                }\n        }else if(username == user1){\n            println(\"Enter your password\")\n            var passwd = scala.io.StdIn.readLine\n                if(passwd == user1Pass){\n                    println(\"Welcome \" + user1)\n                }\n        }else if(failedAttempts == 2){\n            println(\"3 Failed Inputs, returning to options\")\n            failedAttempts = 0\n            option\n        }else{\n            println(\"Enter a valid username\")\n            failedAttempts += 1\n            loginUser\n        }\n    }\n\n    def updateUser{\n        var updateOptionSeq: Seq[String] = Seq(\"1: Update Username\", \"2: Update Password\")\n        println(\"Select an option\")\n\n        for(x <- updateOptionSeq){\n            println(x)\n        }\n\n        var selection = scala.io.StdIn.readInt\n\n        selection match{\n            case 1 => println(\"Enter your username\")\n                        var username = scala.io.StdIn.readLine\n\n                        if(username == administrator){\n                            println(\"Enter your password\")\n                            var passwd = scala.io.StdIn.readLine\n                                if(passwd == adminPass){\n                                    println(\"So, \" + administrator + \", you would like to update your username?\")\n                                    println(\"Please enter a new username\")\n                                    administrator = scala.io.StdIn.readLine\n                                    println(\"Your username has been updated to: \" + administrator)\n                                    println(\"Returning to options\")\n                                    option\n                                }\n                        }else if(username == user1){\n                            println(\"Enter your password\")\n                            var passwd = scala.io.StdIn.readLine\n                                if(passwd == user1Pass){\n                                    println(\"So, \" + user1 + \", you would like to update your username?\")\n                                    println(\"Please enter a new username\")\n                                    user1 = scala.io.StdIn.readLine\n                                    println(\"Your username has been updated to: \" + user1)\n                                    println(\"Returning to options\")\n                                    option\n                                }\n                        }else{\n                            println(\"Enter a valid username\")\n                            updateUser\n                        }\n\n            case 2 => println(\"Enter your username\")\n                        var username = scala.io.StdIn.readLine\n\n                        if(username == administrator){\n                            println(\"Enter your password\")\n                            var passwd = scala.io.StdIn.readLine\n                                if(passwd == adminPass){\n                                    println(\"So, \" + administrator + \", you would like to update your password?\")\n                                    println(\"Please enter a new password\")\n                                    adminPass = scala.io.StdIn.readLine\n                                    println(\"Your password has been updated to: \" + adminPass)\n                                    println(\"Returning to options\")\n                                    option\n                                }\n                        }else if(username == user1){\n                            println(\"Enter your password\")\n                            var passwd = scala.io.StdIn.readLine\n                                if(passwd == user1Pass){\n                                    println(\"So, \" + user1 + \", you would like to update your password?\")\n                                    println(\"Please enter a new password\")\n                                    user1Pass = scala.io.StdIn.readLine\n                                    println(\"Your password has been updated to: \" + user1Pass)\n                                    println(\"Returning to options\")\n                                    option\n                                }\n                        }else{\n                            println(\"Enter a valid username\")\n                            updateUser\n                        }\n\n            case _ => println(\"Enter a valid number\")\n                        option\n        }\n    }\n\n    def displayUsers{\n        println(\"Here are the Users of this Application:\")\n        println(administrator)\n        println(user1)\n        option\n    }\n}"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition json request: {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/Training%20Program/Week%204/hiveproject1/src/main/scala/example/LoginScreen.scala"},"position":{"line":97,"character":28}}[0m
[0m[[0m[0mdebug[0m] [0m[0mlsp-definition found line:                         }[0m
[0m[[0m[0minfo[0m] [0m[0mSymbol not found in definition request {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/Training%20Program/Week%204/hiveproject1/src/main/scala/example/LoginScreen.scala"},"position":{"line":97,"character":28}}[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨2, shutdown, null})[0m
